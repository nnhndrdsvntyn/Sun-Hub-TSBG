local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera
local RunService = game:GetService("RunService")

local ESPEnabled = false
local TracerEnabled = false
local BoxHandles = {}
local TracerHandles = {}

-- Function to create ESP box for a player
local function CreateESPBox(player)
    if player == LocalPlayer then return end
    local function onCharacterAdded(character)
        local rootPart = character:WaitForChild("HumanoidRootPart")

        local highlight = Instance.new("BoxHandleAdornment")
        highlight.Size = rootPart.Size + Vector3.new(1, 1, 1)
        highlight.Color3 = Color3.new(1, 0, 0)
        highlight.Transparency = 0.5
        highlight.AlwaysOnTop = true
        highlight.ZIndex = 0
        highlight.Adornee = rootPart
        highlight.Parent = rootPart

        BoxHandles[player] = highlight
    end

    if player.Character then
        onCharacterAdded(player.Character)
    end
    player.CharacterAdded:Connect(onCharacterAdded)
    player.CharacterRemoving:Connect(function()
        RemoveESPBox(player)
    end)
end

local function RemoveESPBox(player)
    if BoxHandles[player] then
        BoxHandles[player]:Destroy()
        BoxHandles[player] = nil
    end
end

-- Function to create Tracer ESP for a player
local function CreateTracer(player)
    if player == LocalPlayer then return end
    local tracer = Drawing.new("Line")
    tracer.Color = Color3.fromRGB(255, 0, 0)
    tracer.Thickness = 1
    tracer.Visible = true

    TracerHandles[player] = tracer

    local function updateTracer()
        local character = player.Character
        local head = character and character:FindFirstChild("Head")
        if TracerEnabled and head then
            local screenPos, onScreen = Camera:WorldToViewportPoint(head.Position)
            if onScreen then
                tracer.From = Vector2.new(Camera.ViewportSize.X / 2, 0)
                tracer.To = Vector2.new(screenPos.X, screenPos.Y)
                tracer.Visible = true
            else
                tracer.Visible = false
            end
        else
            tracer.Visible = false
        end
    end

    RunService.Heartbeat:Connect(updateTracer)

    player.CharacterAdded:Connect(function()
        updateTracer()
    end)
    player.CharacterRemoving:Connect(function()
        RemoveTracer(player)
    end)
end

local function RemoveTracer(player)
    if TracerHandles[player] then
        TracerHandles[player]:Remove()
        TracerHandles[player] = nil
    end
end

-- Toggles for both ESP types
local function ToggleESP(state)
    ESPEnabled = state
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            if state then
                CreateESPBox(player)
            else
                RemoveESPBox(player)
            end
        end
    end
end

local function ToggleTracer(state)
    TracerEnabled = state
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            if state then
                CreateTracer(player)
            else
                RemoveTracer(player)
            end
        end
    end
end

-- Ensure tracers/ESP update when players join or leave
Players.PlayerAdded:Connect(function(player)
    if ESPEnabled then
        CreateESPBox(player)
    end
    if TracerEnabled then
        CreateTracer(player)
    end
end)

Players.PlayerRemoving:Connect(function(player)
    RemoveESPBox(player)
    RemoveTracer(player)
end)

-- Return both functions for GUI usage
return {
    ToggleESP = ToggleESP,
    ToggleTracer = ToggleTracer
}
