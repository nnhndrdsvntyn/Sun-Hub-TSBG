local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera
local RunService = game:GetService("RunService")

local ESPEnabled = false
local TracerEnabled = false
local TurnLockEnabled = false
local BoxHandles = {}
local TracerHandles = {}

-- UI Setup
local ScreenGui = Instance.new("ScreenGui", game.CoreGui)
local LockInfo = Instance.new("TextLabel")
LockInfo.Parent = ScreenGui
LockInfo.Position = UDim2.new(0, 10, 1, -120)
LockInfo.Size = UDim2.new(0, 200, 0, 100)
LockInfo.TextColor3 = Color3.new(1, 1, 1)
LockInfo.BackgroundTransparency = 1
LockInfo.TextScaled = true
LockInfo.Visible = false
LockInfo.Text = ""

-- Function to find the nearest player
local function GetNearestPlayer()
    local nearestPlayer
    local shortestDistance = math.huge

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (player.Character.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
            if distance < shortestDistance then
                shortestDistance = distance
                nearestPlayer = player
            end
        end
    end
    return nearestPlayer, shortestDistance
end

-- Function to update player rotation to face nearest player
local function UpdatePlayerRotation()
    if not TurnLockEnabled then 
        LockInfo.Visible = false
        return 
    end

    local nearestPlayer, distance = GetNearestPlayer()
    if nearestPlayer and nearestPlayer.Character and nearestPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local rootPart = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        local targetPosition = nearestPlayer.Character.HumanoidRootPart.Position
        rootPart.CFrame = CFrame.new(rootPart.Position, Vector3.new(targetPosition.X, rootPart.Position.Y, targetPosition.Z))

        -- Update UI
        LockInfo.Visible = true
        LockInfo.Text = "| Currently Turning To:" ..
                        "\n| @" .. nearestPlayer.Name ..
                        "\n| Display Name - " .. nearestPlayer.DisplayName ..
                        "\n| Distance: " .. string.format("%.2f", distance)
    else
        LockInfo.Visible = false
    end
end

RunService.Heartbeat:Connect(UpdatePlayerRotation)

-- Function to create ESP box for a player
local function CreateESPBox(player)
    if player == LocalPlayer then return end
    local function onCharacterAdded(character)
        local rootPart = character:WaitForChild("HumanoidRootPart")

        local highlight = Instance.new("BoxHandleAdornment")
        highlight.Size = rootPart.Size + Vector3.new(1, 1, 1)
        highlight.Color3 = Color3.new(1, 0, 0)
        highlight.Transparency = 0.5
        highlight.AlwaysOnTop = true
        highlight.ZIndex = 0
        highlight.Adornee = rootPart
        highlight.Parent = rootPart

        BoxHandles[player] = highlight
    end

    if player.Character then
        onCharacterAdded(player.Character)
    end
    player.CharacterAdded:Connect(onCharacterAdded)
    player.CharacterRemoving:Connect(function()
        RemoveESPBox(player)
    end)
end

local function RemoveESPBox(player)
    if BoxHandles[player] then
        BoxHandles[player]:Destroy()
        BoxHandles[player] = nil
    end
end

-- Function to create Tracer ESP for a player
local function CreateTracer(player)
    if player == LocalPlayer then return end
    local tracer = Drawing.new("Line")
    tracer.Color = Color3.fromRGB(255, 0, 0)
    tracer.Thickness = 1
    tracer.Visible = true

    TracerHandles[player] = tracer

    local function updateTracer()
        local character = player.Character
        local head = character and character:FindFirstChild("Head")
        if TracerEnabled and head then
            local screenPos, onScreen = Camera:WorldToViewportPoint(head.Position)
            if onScreen then
                tracer.From = Vector2.new(Camera.ViewportSize.X / 2, 0)
                tracer.To = Vector2.new(screenPos.X, screenPos.Y)
                tracer.Visible = true
            else
                tracer.Visible = false
            end
        else
            tracer.Visible = false
        end
    end

    RunService.Heartbeat:Connect(updateTracer)

    player.CharacterAdded:Connect(function()
        updateTracer()
    end)
    player.CharacterRemoving:Connect(function()
        RemoveTracer(player)
    end)
end

local function RemoveTracer(player)
    if TracerHandles[player] then
        TracerHandles[player]:Remove()
        TracerHandles[player] = nil
    end
end

-- Toggles for ESP, Tracer, and Turn Lock
local function ToggleESP(state)
    ESPEnabled = state
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            if state then
                CreateESPBox(player)
            else
                RemoveESPBox(player)
            end
        end
    end
end

local function ToggleTracer(state)
    TracerEnabled = state
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            if state then
                CreateTracer(player)
            else
                RemoveTracer(player)
            end
        end
    end
end

local function ToggleTurnLock(state)
    TurnLockEnabled = state
end

-- Ensure tracers/ESP update when players join or leave
Players.PlayerAdded:Connect(function(player)
    if ESPEnabled then
        CreateESPBox(player)
    end
    if TracerEnabled then
        CreateTracer(player)
    end
end)

Players.PlayerRemoving:Connect(function(player)
    RemoveESPBox(player)
    RemoveTracer(player)
end)

-- Return functions for GUI usage
return {
    ToggleESP = ToggleESP,
    ToggleTracer = ToggleTracer,
    ToggleTurnLock = ToggleTurnLock
}
